name: Build Workout Tracker

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prisma Migrate Deploy
        env:
          DATABASE_URL: 'mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@127.0.0.1:3306/workout_tracker'
        working-directory: apps/api-structure
        run: |
          npx prisma migrate deploy
          npx prisma generate

      - name: Build all Turborepo Apps and Packages
        run: npm run build

      - name: Create Docker containers
        run: |
          docker build -t api-structure:latest -f infra/docker/Dockerfile.api-structure apps/api-structure
          docker build -t api-tracking:latest -f infra/docker/Dockerfile.api-tracking apps/api-tracking
          docker build -t web:latest -f infra/docker/Dockerfile.web apps/web

      - name: Save Docker containers for transport to S3
        run: |
          docker save api-structure:latest > api-structure.tar
          docker save api-tracking:latest > api-tracking.tar
          docker save web:latest > web.tar

      # - name: Bundle Projects
      #   run: |
      #     mkdir -p dist-bundle/api-structure
      #     mkdir -p dist-bundle/api-tracking
      #     mkdir -p dist-bundle/web
      #     cp -r apps/api-structure/dist/* dist-bundle/api-structure/
      #     cp -r apps/api-tracking/dist/* dist-bundle/api-tracking/
      #     cp -r apps/web/.next dist-bundle/web/.next
      #     cp -r apps/web/public dist-bundle/web/public
      #     zip -r deployment-bundle.zip dist-bundle

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        #   run: aws s3 cp deployment-bundle.zip s3://${{ secrets.S3_BUCKET_NAME }}/deployment-bundle.zip
        run: |
          aws s3 cp api-structure.tar s3://${{ secrets.S3_BUCKET_NAME }}/api-structure.tar
          aws s3 cp api-tracking.tar s3://${{ secrets.S3_BUCKET_NAME }}/api-tracking.tar
          aws s3 cp web.tar s3://${{ secrets.S3_BUCKET_NAME }}/web.tar
